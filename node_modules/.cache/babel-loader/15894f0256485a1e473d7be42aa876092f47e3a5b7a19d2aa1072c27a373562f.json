{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sadee\\\\OneDrive\\\\Desktop\\\\Gamified Learning\\\\gamified-learning-front-end\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Typography, Grid, Box } from \"@mui/material\";\nimport UserForm from \"../components/UserForm\";\nimport UserList from \"../components/UserList\";\nimport CommunitySkillProgressCard from \"../components/CommunitySkillProgressCard\"; // Import the progress card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // Selected user state\n\n  const fetchUsers = async () => {\n    const res = await fetch(\"http://localhost:5000/api/users\");\n    const data = await res.json();\n    setUsers(data);\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      my: 2,\n      children: \"Community Skill Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(UserForm, {\n          refresh: fetchUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(UserList, {\n            users: users,\n            onSelect: user => setSelectedUser(user) // Set the selected user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), selectedUser && /*#__PURE__*/_jsxDEV(CommunitySkillProgressCard, {\n          user: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aU/UUDZLN6ztfpIOEYlZQ+VCkZM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Grid","Box","UserForm","UserList","CommunitySkillProgressCard","jsxDEV","_jsxDEV","Dashboard","_s","users","setUsers","selectedUser","setSelectedUser","fetchUsers","res","fetch","data","json","children","variant","my","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","refresh","mb","onSelect","user","_c","$RefreshReg$"],"sources":["C:/Users/sadee/OneDrive/Desktop/Gamified Learning/gamified-learning-front-end/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Grid, Box } from \"@mui/material\";\r\nimport UserForm from \"../components/UserForm\";\r\nimport UserList from \"../components/UserList\";\r\nimport CommunitySkillProgressCard from \"../components/CommunitySkillProgressCard\"; // Import the progress card\r\n\r\nconst Dashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null); // Selected user state\r\n\r\n  const fetchUsers = async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/users\");\r\n    const data = await res.json();\r\n    setUsers(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" my={2}>\r\n        Community Skill Dashboard\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <UserForm refresh={fetchUsers} />\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Box mb={3}>\r\n            <UserList\r\n              users={users}\r\n              onSelect={(user) => setSelectedUser(user)} // Set the selected user\r\n            />\r\n          </Box>\r\n          {/* Display the Community Skill Progress Card only when a user is selected */}\r\n          {selectedUser && <CommunitySkillProgressCard user={selectedUser} />}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AAChE,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,0BAA0B,MAAM,0CAA0C,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IAC1D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BP,QAAQ,CAACM,IAAI,CAAC;EAChB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACR,SAAS;IAAAoB,QAAA,gBACRZ,OAAA,CAACP,UAAU;MAACoB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,EAAC;IAEhC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACblB,OAAA,CAACN,IAAI;MAACyB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,gBACzBZ,OAAA,CAACN,IAAI;QAAC2B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAX,QAAA,eACvBZ,OAAA,CAACJ,QAAQ;UAAC4B,OAAO,EAAEjB;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACPlB,OAAA,CAACN,IAAI;QAAC2B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAX,QAAA,gBACvBZ,OAAA,CAACL,GAAG;UAAC8B,EAAE,EAAE,CAAE;UAAAb,QAAA,eACTZ,OAAA,CAACH,QAAQ;YACPM,KAAK,EAAEA,KAAM;YACbuB,QAAQ,EAAGC,IAAI,IAAKrB,eAAe,CAACqB,IAAI,CAAE,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAELb,YAAY,iBAAIL,OAAA,CAACF,0BAA0B;UAAC6B,IAAI,EAAEtB;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAAChB,EAAA,CApCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}